//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Accorda.Properties {
    using System;
    
    
    /// <summary>
    ///   Classe di risorse fortemente tipizzata per la ricerca di stringhe localizzate e così via.
    /// </summary>
    // Questa classe è stata generata automaticamente dalla classe StronglyTypedResourceBuilder.
    // tramite uno strumento quale ResGen o Visual Studio.
    // Per aggiungere o rimuovere un membro, modificare il file con estensione ResX ed eseguire nuovamente ResGen
    // con l'opzione /str oppure ricompilare il progetto VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Restituisce l'istanza di ResourceManager nella cache utilizzata da questa classe.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Accorda.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Esegue l'override della proprietà CurrentUICulture del thread corrente per tutte le
        ///   ricerche di risorse eseguite utilizzando questa classe di risorse fortemente tipizzata.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a # Autori 🚀
        ///
        ///- **Giacomo Picchiarelli** (https://github.com/gpicchiarelli)
        ///- **ChatGPT** - Assistenza automatizzata
        ///- **Bing Chat** - Generazione automatica di immagini.
        /// </summary>
        internal static string AUTHORS {
            get {
                return ResourceManager.GetString("AUTHORS", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a # Contribuire a Accorda
        ///
        ///Grazie per aver scelto di contribuire ad Accorda! La tua passione e le tue idee sono il motore che spinge questo progetto a crescere e migliorare.
        ///
        ///## 🚀 Pronti a Iniziare
        ///
        ///Contribuire ad Accorda è facile e gratificante. Ecco come puoi partecipare:
        ///
        ///1. 🍴 [Forka il repository](https://github.com/gpicchiarelli/accorda/fork) su GitHub.
        ///2. 👩‍💻 Clona il tuo fork sulla tua macchina locale.
        ///3. 🌿 Crea un nuovo branch per le tue modifiche.
        ///4. ✨ Apporta le tue modifiche e assic [stringa troncata]&quot;;.
        /// </summary>
        internal static string CONTRIBUTING {
            get {
                return ResourceManager.GetString("CONTRIBUTING", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a MIT License
        ///
        ///Copyright (c) 2023 Giacomo Picchiarelli
        ///
        ///Permission is hereby granted, free of charge, to any person obtaining a copy
        ///of this software and associated documentation files (the &quot;Software&quot;), to deal
        ///in the Software without restriction, including without limitation the rights
        ///to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        ///copies of the Software, and to permit persons to whom the Software is
        ///furnished to do so, subject to the following conditions:
        ///
        ///The above cop [stringa troncata]&quot;;.
        /// </summary>
        internal static string LICENSE {
            get {
                return ResourceManager.GetString("LICENSE", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Cerca una stringa localizzata simile a # Accorda - Accordatore per Chitarra
        ///
        ///![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)
        ///![Open Issues](https://img.shields.io/github/issues-raw/gpicchiarelli/accorda.svg)
        ///![Open Pull Requests](https://img.shields.io/github/issues-pr-raw/gpicchiarelli/accorda.svg)
        ///![Last Commit](https://img.shields.io/github/last-commit/gpicchiarelli/accorda.svg)
        ///![Downloads](https://img.shields.io/github/downloads/gpicchiarelli/repo/accorda.svg)
        ///![Stars](https://img.shields.io/github/stars/gpicchiar [stringa troncata]&quot;;.
        /// </summary>
        internal static string README {
            get {
                return ResourceManager.GetString("README", resourceCulture);
            }
        }
    }
}
